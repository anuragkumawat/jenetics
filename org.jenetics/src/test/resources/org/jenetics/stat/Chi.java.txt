/*
 * Java Genetic Algorithm Library (@__identifier__@).
 * Copyright (c) @__year__@ Franz Wilhelmstötter
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:
 *    Franz Wilhelmstötter (franz.wilhelmstoetter@gmx.at)
 */

import java.io.PrintWriter;

import org.apache.commons.math.distribution.ChiSquaredDistributionImpl;

/**
 * @author <a href="mailto:franz.wilhelmstoetter@gmx.at">Franz Wilhelmstötter</a>
 * @version $Id$
 */
public class Chi {

	public static void main(final String[] args) throws Exception {
		final PrintWriter writer = new PrintWriter("chi.txt");
		
		double[] props = new double[]{0.9, 0.95, 0.975, 0.99, 0.995, 0.999, 0.9999};
		
		writer.print("#\t");
		for (int i = 0; i < props.length; ++i) {
			writer.print(String.format("%03.6f", props[i]));
			if (i < props.length - 1) {
				writer.print("\t");
			}
		}
		writer.println();
		
		for (int f = 1; f <= 100; ++f) {
			final ChiSquaredDistributionImpl chi = new ChiSquaredDistributionImpl(f);
			
			writer.print(f);
			writer.print(":\t");
			for (int i = 0; i < props.length; ++i) {
				writer.print(String.format("%03.6f", chi.inverseCumulativeProbability(props[i])));
				if (i < props.length - 1) {
					writer.print("\t");
				}
			}
			writer.println();
			
		}
		
		writer.close();
	}
	
}
